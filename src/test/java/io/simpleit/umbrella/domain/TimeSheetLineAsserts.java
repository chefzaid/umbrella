package io.simpleit.umbrella.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TimeSheetLineAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTimeSheetLineAllPropertiesEquals(TimeSheetLine expected, TimeSheetLine actual) {
        assertTimeSheetLineAutoGeneratedPropertiesEquals(expected, actual);
        assertTimeSheetLineAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTimeSheetLineAllUpdatablePropertiesEquals(TimeSheetLine expected, TimeSheetLine actual) {
        assertTimeSheetLineUpdatableFieldsEquals(expected, actual);
        assertTimeSheetLineUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTimeSheetLineAutoGeneratedPropertiesEquals(TimeSheetLine expected, TimeSheetLine actual) {
        assertThat(expected)
            .as("Verify TimeSheetLine auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTimeSheetLineUpdatableFieldsEquals(TimeSheetLine expected, TimeSheetLine actual) {
        assertThat(expected)
            .as("Verify TimeSheetLine relevant properties")
            .satisfies(e -> assertThat(e.getMonthlyDays()).as("check monthlyDays").isEqualTo(actual.getMonthlyDays()))
            .satisfies(e -> assertThat(e.getExtraHours()).as("check extraHours").isEqualTo(actual.getExtraHours()))
            .satisfies(e -> assertThat(e.getComments()).as("check comments").isEqualTo(actual.getComments()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTimeSheetLineUpdatableRelationshipsEquals(TimeSheetLine expected, TimeSheetLine actual) {
        assertThat(expected)
            .as("Verify TimeSheetLine relationships")
            .satisfies(e -> assertThat(e.getTimeSheet()).as("check timeSheet").isEqualTo(actual.getTimeSheet()));
    }
}
