package io.simpleit.umbrella.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class IdDocumentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIdDocumentAllPropertiesEquals(IdDocument expected, IdDocument actual) {
        assertIdDocumentAutoGeneratedPropertiesEquals(expected, actual);
        assertIdDocumentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIdDocumentAllUpdatablePropertiesEquals(IdDocument expected, IdDocument actual) {
        assertIdDocumentUpdatableFieldsEquals(expected, actual);
        assertIdDocumentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIdDocumentAutoGeneratedPropertiesEquals(IdDocument expected, IdDocument actual) {
        assertThat(expected)
            .as("Verify IdDocument auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIdDocumentUpdatableFieldsEquals(IdDocument expected, IdDocument actual) {
        assertThat(expected)
            .as("Verify IdDocument relevant properties")
            .satisfies(e -> assertThat(e.getIdType()).as("check idType").isEqualTo(actual.getIdType()))
            .satisfies(e -> assertThat(e.getIdNumber()).as("check idNumber").isEqualTo(actual.getIdNumber()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIdDocumentUpdatableRelationshipsEquals(IdDocument expected, IdDocument actual) {
        assertThat(expected)
            .as("Verify IdDocument relationships")
            .satisfies(e -> assertThat(e.getDocument()).as("check document").isEqualTo(actual.getDocument()));
    }
}
