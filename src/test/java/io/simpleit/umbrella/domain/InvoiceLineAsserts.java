package io.simpleit.umbrella.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class InvoiceLineAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInvoiceLineAllPropertiesEquals(InvoiceLine expected, InvoiceLine actual) {
        assertInvoiceLineAutoGeneratedPropertiesEquals(expected, actual);
        assertInvoiceLineAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInvoiceLineAllUpdatablePropertiesEquals(InvoiceLine expected, InvoiceLine actual) {
        assertInvoiceLineUpdatableFieldsEquals(expected, actual);
        assertInvoiceLineUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInvoiceLineAutoGeneratedPropertiesEquals(InvoiceLine expected, InvoiceLine actual) {
        assertThat(expected)
            .as("Verify InvoiceLine auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInvoiceLineUpdatableFieldsEquals(InvoiceLine expected, InvoiceLine actual) {
        assertThat(expected)
            .as("Verify InvoiceLine relevant properties")
            .satisfies(e -> assertThat(e.getLabel()).as("check label").isEqualTo(actual.getLabel()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getPrice()).as("check price").isEqualTo(actual.getPrice()))
            .satisfies(e -> assertThat(e.getQuantity()).as("check quantity").isEqualTo(actual.getQuantity()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInvoiceLineUpdatableRelationshipsEquals(InvoiceLine expected, InvoiceLine actual) {
        assertThat(expected)
            .as("Verify InvoiceLine relationships")
            .satisfies(e -> assertThat(e.getInvoice()).as("check invoice").isEqualTo(actual.getInvoice()));
    }
}
